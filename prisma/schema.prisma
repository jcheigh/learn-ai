generator client { 
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Module {
  id          String     @id @default(uuid())
  title       String
  description String?
  imageUrl    String?
  isPublished Boolean    @default(false)

  categoryId  String?
  category    Category?  @relation(fields: [categoryId], references: [id])

  chapters    Chapter[]

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([categoryId])
}

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  modules Module[] 
}

model Chapter {
  id          String        @id @default(uuid())
  title       String
  description String?
  videoUrl    String?
  position    Int
  isPublished Boolean       @default(false)

  muxData     MuxData?

  moduleId    String        // renamed from courseId
  module      Module        @relation(fields: [moduleId], references: [id], onDelete: Cascade)

  userProgress UserProgress[]

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([moduleId])
}

model MuxData {
  id         String   @id @default(uuid())
  assetId    String
  playbackId String?

  chapterId  String   @unique
  chapter    Chapter  @relation(fields: [chapterId], references: [id], onDelete: Cascade)
}

model UserProgress {
  id          String    @id @default(uuid())
  userId      String

  chapterId   String
  chapter     Chapter   @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  isCompleted Boolean   @default(false)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([chapterId])
  @@unique([userId, chapterId])
}
